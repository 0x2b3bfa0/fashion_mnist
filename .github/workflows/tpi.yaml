name: train-tpi

on: [push]

jobs:
  train-tpi:
    timeout-minutes: 5000
    runs-on: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: tpi
      env:
        REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        NAME=fashion_mnist-$GITHUB_RUN_ID
        echo $NAME
        ls

        cat <<EOF > main.tf
        terraform {
          required_providers {
            xpd = {
              source = "0x2b3bfa0/xpd",
            }
          }
        }

        provider "xpd" {}
        variable "name" {}

        resource "xpd_task" "task" {
          cloud     = "aws"
          machine   = "t2.medium"
          spot      = 0
          name      = var.name
          directory = "."
          region    = "us-west"

          script = <<-END
            #!/bin/bash

            echo "APT::Get::Assume-Yes \"true\";" | sudo tee -a /etc/apt/apt.conf.d/90assumeyes

            sudo apt remove unattended-upgrades
            systemctl disable apt-daily-upgrade.service

            sudo add-apt-repository universe -y
            sudo add-apt-repository ppa:git-core/ppa -y
            sudo apt update && sudo apt-get install -y software-properties-common build-essential git awscli python3-pip

            curl -sL https://deb.nodesource.com/setup_12.x | sudo bash
            sudo apt update && sudo apt-get install -y nodejs 
            sudo npm install -g --unsafe @dvcorg/cml

            export REPO_TOKEN=$REPO_TOKEN
            export S3_BUCKET=$NAME
            pip3 install -r requirements.txt
            python3 train.py
          END
        }
        EOF

        terraform init 
        terraform apply --auto-approve -var "name=${NAME}"
