on: workflow_dispatch
jobs:
  train:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: |
        cat <<'END' > main.tf
          terraform {
            required_providers {
              xpd = {
                source = "0x2b3bfa0/xpd",
              }
            }
          }

          provider "xpd" {}

          variable "name" {}
          variable "done" {}
          variable "repo_token" {}

          resource "xpd_task" "task" {
            cloud     = "aws"
            name      = var.name
            directory = "."

            environment = {
              DONE = var.done
              REPO_TOKEN = var.repo_token,
            }

            script = <<-END
              #!/bin/bash
              export HOME=/root
              
              curl --silent --location https://deb.nodesource.com/setup_14.x | bash
              apt update
              apt install --yes build-essential git nodejs
              
              npm install --global --unsafe @dvcorg/cml
              
              AUTHORIZATION="$(printf "x-access-token:$REPO_TOKEN" | base64)"
              git config --unset http.https://github.com/.extraheader
              git config --add http.https://github.com/.extraheader \
                "AUTHORIZATION: basic $AUTHORIZATION"
                
              date > file
              cml pr file 
              
              echo "DONE:$DONE"
            END
          }
        END
        
    - run: |
        export TF_VAR_done="$(uuidgen)"
        
        terraform init
        terraform apply --auto-approve
        terraform refresh && terraform show
        
        while sleep 10; do
          terraform refresh && terraform show --json |
            grep --fixed-strings "DONE:$TF_VAR_done" && break
        done

        terraform destroy --auto-approve
      env:
        TF_VAR_name: ${{ github.run_id }}
        TF_VAR_repo_token: ${{ secrets.REPO_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        
